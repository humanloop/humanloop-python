[project]
name = "humanloop"

[tool.poetry]
name = "humanloop"
version = "0.8.40b3"
description = ""
readme = "README.md"
authors = []
keywords = []

classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
packages = [
    { include = "humanloop", from = "src"}
]

[project.urls]
Repository = 'https://github.com/humanloop/humanloop-python'

[tool.poetry.dependencies]
python = ">=3.9,<4"
click = "^8.0.0"
deepdiff = "^8.2.0"
httpx = ">=0.21.2"
httpx-sse = "0.4.0"
mmh3 = "^5.1.0"
opentelemetry-api = ">=1.27.0"
opentelemetry-instrumentation-anthropic = ">=0.20"
opentelemetry-instrumentation-bedrock = ">=0.15"
opentelemetry-instrumentation-cohere = ">=0.20"
opentelemetry-instrumentation-groq = ">=0.29"
opentelemetry-instrumentation-openai = ">=0.20"
opentelemetry-instrumentation-replicate = ">=0.20"
opentelemetry-proto = ">=1.30.0"
opentelemetry-sdk = ">=1.27.0"
parse = ">=1"
protobuf = ">=5.29.3"
pydantic = ">= 1.9.2"
pydantic-core = "^2.18.2"
python-dotenv = "^1.1.0"
typing_extensions = ">= 4.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "==1.13.0"
pytest = "^7.4.0"
pytest-asyncio = "^0.23.5"
python-dateutil = "^2.9.0"
types-python-dateutil = "^2.9.0.20240316"
anthropic = ">=0.37.1"
cohere = "^5.11.2"
groq = ">=0.11.0"
jsonschema = "^4.23.0"
numpy = "<2.0.0"
openai = "^1.52.2"
pandas = "^2.2.0"
parse-type = ">=0.6.4"
pyarrow = "^19.0.0"
pytest-retry = "^1.6.3"
pytest-xdist = "^3.6.1"
replicate = "^1.0.3"
ruff = "==0.11.5"
types-jsonschema = "^4.23.0.20240813"
types-protobuf = "^5.29.1.20250208"

[tool.pytest.ini_options]
testpaths = [ "tests" ]
asyncio_mode = "auto"

[tool.mypy]
plugins = ["pydantic.mypy"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
]
ignore = [
    "E402",  # Module level import not at top of file
    "E501",  # Line too long
    "E711",  # Comparison to `None` should be `cond is not None`
    "E712",  # Avoid equality comparisons to `True`; use `if ...:` checks
    "E721",  # Use `is` and `is not` for type comparisons, or `isinstance()` for insinstance checks
    "E722",  # Do not use bare `except`
    "E731",  # Do not assign a `lambda` expression, use a `def`
    "F821",  # Undefined name
    "F841"   # Local variable ... is assigned to but never used
]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
humanloop = "humanloop.cli.__main__:cli"
