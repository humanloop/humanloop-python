# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import typing_extensions

from ..types.files_tool_type import FilesToolType
from ..types.version_status import VersionStatus
from .environment_response import EnvironmentResponseParams
from .evaluator_aggregate import EvaluatorAggregateParams
from .input_response import InputResponseParams
from .tool_function import ToolFunctionParams
from .user_response import UserResponseParams

if typing.TYPE_CHECKING:
    from .monitoring_evaluator_response import MonitoringEvaluatorResponseParams


class ToolResponseParams(typing_extensions.TypedDict):
    """
    Request to create a new Tool.
    """

    path: str
    """
    Path of the Tool, including the name, which is used as a unique identifier.
    """

    id: str
    """
    Unique identifier for the Tool.
    """

    name: str
    """
    Name of the Tool, which is used as a unique identifier.
    """

    version_id: str
    """
    Unique identifier for the specific Tool Version. If no query params provided, the default deployed Tool Version is returned.
    """

    type: typing_extensions.NotRequired[typing.Literal["tool"]]
    environments: typing_extensions.NotRequired[typing.Sequence[EnvironmentResponseParams]]
    """
    The list of environments the Tool Version is deployed to.
    """

    created_at: dt.datetime
    updated_at: dt.datetime
    created_by: typing_extensions.NotRequired[UserResponseParams]
    """
    The user who created the Tool.
    """

    status: VersionStatus
    """
    The status of the Tool Version.
    """

    last_used_at: dt.datetime
    function: typing_extensions.NotRequired[ToolFunctionParams]
    """
    Callable function specification of the Tool shown to the model for tool calling.
    """

    source_code: typing_extensions.NotRequired[str]
    """
    Code source of the Tool.
    """

    setup_values: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]
    """
    Values needed to setup the Tool, defined in JSON Schema format: https://json-schema.org/
    """

    tool_type: typing_extensions.NotRequired[FilesToolType]
    """
    Type of Tool.
    """

    commit_message: typing_extensions.NotRequired[str]
    """
    Message describing the changes made.
    """

    version_logs_count: int
    """
    The number of logs that have been generated for this Tool Version
    """

    total_logs_count: int
    """
    The number of logs that have been generated across all Tool Versions
    """

    inputs: typing.Sequence[InputResponseParams]
    """
    Inputs associated to the Prompt. Inputs correspond to any of the variables used within the Tool template.
    """

    evaluators: typing_extensions.NotRequired[typing.Sequence["MonitoringEvaluatorResponseParams"]]
    """
    Evaluators that have been attached to this Tool that are used for monitoring logs.
    """

    signature: typing_extensions.NotRequired[str]
    """
    Signature of the Tool.
    """

    evaluator_aggregates: typing_extensions.NotRequired[typing.Sequence[EvaluatorAggregateParams]]
    """
    Aggregation of Evaluator results for the Tool Version.
    """
