# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import typing_extensions

from .evaluator_response import EvaluatorResponseParams


class EvaluatorLogResponseParams(typing_extensions.TypedDict):
    """
    General request for creating a Log
    """

    output: typing_extensions.NotRequired[str]
    """
    Generated output from your model for the provided inputs. Can be `None` if logging an error, or if creating a parent Log with the intention to populate it later.
    """

    created_at: typing_extensions.NotRequired[dt.datetime]
    """
    User defined timestamp for when the log was created.
    """

    error: typing_extensions.NotRequired[str]
    """
    Error message if the log is an error.
    """

    provider_latency: typing_extensions.NotRequired[float]
    """
    Duration of the logged event in seconds.
    """

    provider_request: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]
    """
    Raw request sent to provider.
    """

    provider_response: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]
    """
    Raw response received the provider.
    """

    session_id: typing_extensions.NotRequired[str]
    """
    Unique identifier for the Session to associate the Log to. Allows you to record multiple Logs to a Session (using an ID kept by your internal systems) by passing the same `session_id` in subsequent log requests.
    """

    parent_id: str
    """
    Identifier of the evaluated Log. The newly created Log will have this one set as parent.
    """

    inputs: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]
    """
    The inputs passed to the prompt template.
    """

    source: typing_extensions.NotRequired[str]
    """
    Identifies where the model was called from.
    """

    metadata: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]
    """
    Any additional metadata to record.
    """

    save: typing_extensions.NotRequired[bool]
    """
    Whether the request/response payloads will be stored on Humanloop.
    """

    source_datapoint_id: typing_extensions.NotRequired[str]
    """
    Unique identifier for the Datapoint that this Log is derived from. This can be used by Humanloop to associate Logs to Evaluations. If provided, Humanloop will automatically associate this Log to Evaluations that require a Log for this Datapoint-Version pair.
    """

    batches: typing_extensions.NotRequired[typing.Sequence[str]]
    """
    Array of Batch Ids that this log is part of. Batches are used to group Logs together for offline Evaluations
    """

    user: typing_extensions.NotRequired[str]
    """
    End-user ID related to the Log.
    """

    environment: typing_extensions.NotRequired[str]
    """
    The name of the Environment the Log is associated to.
    """

    judgment: typing_extensions.NotRequired[typing.Any]
    id: str
    """
    Unique identifier for the Log.
    """

    evaluator: EvaluatorResponseParams
    """
    The Evaluator used to generate the judgment.
    """
