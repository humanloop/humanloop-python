# This file was auto-generated by Fern from our API Definition.

import typing

import typing_extensions

from ..types.tool_source import ToolSource


class ModelConfigToolRequestParams(typing_extensions.TypedDict):
    """
    Definition of tool within a model config.

    The subset of ToolConfig parameters received by the chat endpoint.
    Does not have things like the signature or setup schema.
    """

    name: str
    """
    The name of the tool shown to the model.
    """

    description: typing_extensions.NotRequired[str]
    """
    The description of the tool shown to the model.
    """

    parameters: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]
    """
    Definition of parameters needed to run the tool. Provided in jsonschema format: https://json-schema.org/
    """

    source: typing_extensions.NotRequired[ToolSource]
    """
    Source of the tool. If defined at an organization level will be 'organization' else 'inline'.
    """

    source_code: typing_extensions.NotRequired[str]
    """
    Code source of the tool.
    """

    other: typing_extensions.NotRequired[typing.Dict[str, typing.Any]]
    """
    Other parameters that define the config.
    """

    preset_name: typing_extensions.NotRequired[str]
    """
    If is_preset = true, this is the name of the preset tool on Humanloop. This is used as the key to look up the Humanloop runtime of the tool
    """
