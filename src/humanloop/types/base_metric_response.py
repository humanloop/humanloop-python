# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class BaseMetricResponse(UncheckedBaseModel):
    id: str = pydantic.Field()
    """
    ID of the metric. Starts with 'metric\_'.
    """

    name: str = pydantic.Field()
    """
    The name of the metric.
    """

    description: str = pydantic.Field()
    """
    A description of what the metric measures.
    """

    code: str = pydantic.Field()
    """
    Python code used to calculate a metric value on each logged datapoint.
    """

    default: bool = pydantic.Field()
    """
    Whether the metric is a global default metric. Metrics with this flag enabled cannot be deleted or modified.
    """

    active: bool = pydantic.Field()
    """
    If enabled, the metric is calculated for every logged datapoint.
    """

    created_at: dt.datetime
    updated_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
