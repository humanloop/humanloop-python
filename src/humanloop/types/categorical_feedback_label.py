# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .feedback_label_status import FeedbackLabelStatus
from .label_sentiment import LabelSentiment


class CategoricalFeedbackLabel(UncheckedBaseModel):
    value: str
    sentiment: LabelSentiment = pydantic.Field()
    """
    Whether the feedback sentiment is positive or negative.
    """

    status: FeedbackLabelStatus = pydantic.Field()
    """
    Whether the feedback label is active or inactive.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
