# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .datapoint_response import DatapointResponse
from .log_response import LogResponse


class EvaluationLogResponse(UncheckedBaseModel):
    run_id: str = pydantic.Field()
    """
    Unique identifier for the Run.
    """

    datapoint: typing.Optional[DatapointResponse] = pydantic.Field(default=None)
    """
    The Datapoint used to generate the Log
    """

    log: LogResponse = pydantic.Field()
    """
    The Log that was evaluated by the Evaluator.
    """

    evaluator_logs: typing.List[LogResponse] = pydantic.Field()
    """
    The Evaluator Logs containing the judgments for the Log.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
