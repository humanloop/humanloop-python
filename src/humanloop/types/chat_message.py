# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .chat_message_content import ChatMessageContent
import pydantic
from .chat_role import ChatRole
from .tool_call import ToolCall
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ChatMessage(UncheckedBaseModel):
    content: typing.Optional[ChatMessageContent] = pydantic.Field(default=None)
    """
    The content of the message.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional name of the message author.
    """

    tool_call_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Tool call that this message is responding to.
    """

    role: ChatRole = pydantic.Field()
    """
    Role of the message author.
    """

    tool_calls: typing.Optional[typing.List[ToolCall]] = pydantic.Field(default=None)
    """
    A list of tool calls requested by the assistant.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
