# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class ExperimentVersionResponse(UncheckedBaseModel):
    mean: typing.Optional[float] = pydantic.Field(default=None)
    """
    The mean performance of the Version.
    """

    spread: typing.Optional[float] = pydantic.Field(default=None)
    """
    The spread of performance of the Version.
    """

    trials_count: int = pydantic.Field()
    """
    Number of datapoints with feedback associated to the experiment.
    """

    active: bool = pydantic.Field()
    """
    Whether the Version is active in the experiment. Only active model configs can be sampled from the experiment.
    """

    id: str = pydantic.Field()
    """
    String ID of Version.
    """

    commit_message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Commit message of Version.
    """

    version_id: str = pydantic.Field()
    """
    Version of the Prompt or Tool.
    """

    created_at: dt.datetime
    updated_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
