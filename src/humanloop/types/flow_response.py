# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ..core.unchecked_base_model import UncheckedBaseModel
from .environment_response import EnvironmentResponse
from .evaluator_aggregate import EvaluatorAggregate
from .user_response import UserResponse


class FlowResponse(UncheckedBaseModel):
    """
    Response model for a Flow.
    """

    path: str = pydantic.Field()
    """
    Path of the Flow, including the name, which is used as a unique identifier.
    """

    id: str = pydantic.Field()
    """
    Unique identifier for the Flow.
    """

    directory_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    ID of the directory that the file is in on Humanloop.
    """

    attributes: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    A key-value object identifying the Flow Version.
    """

    version_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique name for the Flow version. Version names must be unique for a given Flow.
    """

    version_description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Description of the Version.
    """

    name: str = pydantic.Field()
    """
    Name of the Flow.
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Description of the Flow.
    """

    readme: typing.Optional[str] = pydantic.Field(default=None)
    """
    Long description of the file.
    """

    tags: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    List of tags associated with the file.
    """

    version_id: str = pydantic.Field()
    """
    Unique identifier for the specific Flow Version. If no query params provided, the default deployed Flow Version is returned.
    """

    type: typing.Optional[typing.Literal["flow"]] = None
    environments: typing.Optional[typing.List[EnvironmentResponse]] = pydantic.Field(default=None)
    """
    The list of environments the Flow Version is deployed to.
    """

    created_at: dt.datetime
    updated_at: dt.datetime
    created_by: typing.Optional[UserResponse] = pydantic.Field(default=None)
    """
    The user who created the Flow.
    """

    last_used_at: dt.datetime
    version_logs_count: int = pydantic.Field()
    """
    The number of logs that have been generated for this Flow Version
    """

    evaluator_aggregates: typing.Optional[typing.List[EvaluatorAggregate]] = pydantic.Field(default=None)
    """
    Aggregation of Evaluator results for the Flow Version.
    """

    evaluators: typing.Optional[typing.List["MonitoringEvaluatorResponse"]] = pydantic.Field(default=None)
    """
    The list of Monitoring Evaluators associated with the Flow Version.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .evaluator_response import EvaluatorResponse  # noqa: E402, F401, I001
from .monitoring_evaluator_response import MonitoringEvaluatorResponse  # noqa: E402, F401, I001
from .prompt_response import PromptResponse  # noqa: E402, F401, I001
from .tool_response import ToolResponse  # noqa: E402, F401, I001
from .version_deployment_response import VersionDeploymentResponse  # noqa: E402, F401, I001
from .version_id_response import VersionIdResponse  # noqa: E402, F401, I001

update_forward_refs(FlowResponse)
