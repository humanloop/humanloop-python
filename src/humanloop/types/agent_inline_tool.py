# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .tool_function import ToolFunction
from .on_agent_call_enum import OnAgentCallEnum
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class AgentInlineTool(UncheckedBaseModel):
    type: typing.Literal["inline"] = "inline"
    json_schema: ToolFunction
    on_agent_call: typing.Optional[OnAgentCallEnum] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
