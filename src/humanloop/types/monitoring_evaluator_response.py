# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import pydantic

from ..core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ..core.unchecked_base_model import UncheckedBaseModel
from .monitoring_evaluator_state import MonitoringEvaluatorState


class MonitoringEvaluatorResponse(UncheckedBaseModel):
    version_reference: VersionReferenceResponse = pydantic.Field()
    """
    The Evaluator Version used for monitoring. This can be a specific Version by ID, or a Version deployed to an Environment.
    """

    version: typing.Optional[EvaluatorResponse] = pydantic.Field(default=None)
    """
    The deployed Version.
    """

    state: MonitoringEvaluatorState = pydantic.Field()
    """
    The state of the Monitoring Evaluator. Either `active` or `inactive`
    """

    created_at: dt.datetime
    updated_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .evaluator_response import EvaluatorResponse  # noqa: E402
from .version_reference_response import VersionReferenceResponse  # noqa: E402

update_forward_refs(MonitoringEvaluatorResponse)
